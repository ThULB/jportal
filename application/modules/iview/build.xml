<?xml version="1.0" encoding="UTF-8"?>

<!-- =================================================================== -->
<!-- MyCoRe-IView build file for use with ANT                            -->
<!--  												                     -->
<!-- Andreas Trappe 	- concept, devel. in misc.                       -->
<!-- Britta Kapitzki	- Design					                     -->
<!-- Thomas Scheffler   - html prototype		                         -->
<!-- Stephan Schmidt 	- html prototype			                     -->
<!-- $Revision: 1.1 $ $Date: 2008/04/11 09:09:38 $                      -->
<!-- =================================================================== -->

<project name="MyCoReModule - IView" default="usage" basedir="../..">

    <property name="build.sysclasspath" value="last" />
    <import file="${basedir}/common-modules.xml" />
	<property name="module.base" value="iview" />
	<property name="module.dir" value="${basedir}/modules/${module.base}" />

	<!-- =================================================================== -->
	<!-- Help on usage                                                       -->
	<!-- =================================================================== -->

    <target name="usage">
        <echo level="info">

      Available targets are:
        compile              --> Compiles all sources of this module
        webapps              --> Build the web application directory
        webapps.i18n         --> Build the messages_[lang].properties

          Please do not use any of the other targets, they are internal.
        </echo>
    </target>

	<!-- =================================================================== -->
	<!-- Info                                                                -->
	<!-- =================================================================== -->

	<target name="info">
		<echo>${ant.project.name} will include programs to view images in a web application.</echo>
	</target>
	
	<!-- =================================================================== -->
	<!-- Create scripts in bin like mycore.cmd/.sh a.s.o.                    -->
	<!-- =================================================================== -->

    <target name="create.scripts">
        <echo level="info">
			building ${ant.project.name} create.scripts
	    </echo>

        <!-- copy mycore.properties.iview.template if it isn't -->
        <copy file="${module.dir}/config/mycore.properties.iview.template" tofile="${module.dir}/config/mycore.properties.iview" overwrite="false" />
		<mcr-config propertyfile="${build.config}/mycore.properties" mergeFile="${basedir}/modules/iview/config/mycore.properties.iview"/>
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.services.imaging.MCRImgCacheCommands" />    	
    </target>

	<!-- =================================================================== -->
	<!-- Build the web application directory and copy webpages               -->
	<!-- =================================================================== -->

	<target name="webapps">
        <echo level="info">
			building ${ant.project.name} webapp
	    </echo>

        <!-- copy mycore.properties.iview.template if it isn't -->
        <copy file="${module.dir}/config/mycore.properties.iview.template" tofile="${basedir}/modules/iview/config/mycore.properties.iview" overwrite="false" />

        <!-- copy Stylesheets  -->
        <copy todir="${build.webapps}/WEB-INF/stylesheets/" preservelastmodified="yes" flatten="true">
            <fileset dir="${module.dir}/xsl/">
                <include name="**/*.xsl" />
            </fileset>
        </copy>

        <!-- copy web stuff -->
        <mkdir dir="${build.webapps}/modules/iview/web" />
        <copy todir="${build.webapps}/modules/iview/web/" flatten="false">
            <fileset dir="${module.dir}/web/" />
        </copy>

        <available property="web.xml.present" file="${module.dir}/config/web.xml" />
        <antcall target="do.merge">
            <param name="web.xml.file" value="${module.dir}/config/web.xml" />
        </antcall>

    	<mcr-config propertyfile="${build.webapps}/WEB-INF/classes/mycore.properties" mergeFile="${module.dir}/config/mycore.properties.iview" />
		<mcr-config action="addInclude" propertyfile="${build.webapps}/WEB-INF/classes/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.services.imaging.MCRImgCacheCommands" />    	
    </target>
    	
    <target name="webapps.i18n" >
        <echo level="info">
			building ${ant.project.name} webapp.i18n
	    </echo>
    	
        <!-- i18n -->
        <antcall target="properties.merge">
            <param name="module" value="${module.dir}/config/messages_de.properties" />
            <param name="locale_param" value="de" />
        </antcall>

        <antcall target="properties.merge">
            <param name="module" value="${module.dir}/config/messages_en.properties"/>
            <param name="locale_param" value="en"/>
        </antcall>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the sources from directory sources to directory classes    -->
    <!-- =================================================================== -->

    <target name="compile">
        <echo level="info">
			compiling ${ant.project.name} classes
	    </echo>

        <antcall target="javac">
            <param name="packages" value="org/mycore/frontend/iview/**" />
        </antcall>
    </target>

    <target name="init">
        <path id="mycore.classpath">
            <fileset dir="${build.lib}" includes="*.jar" />
        </path>
    </target>

    <target name="javac" depends="init">
        <echo level="info">compiling ${packages}</echo>
        <javac 
			srcdir="${module.dir}/sources" 
			destdir="${build.classes}" includes="${packages}" 
			classpathref="application.classpath" 
			debug="${debug}" 
			optimize="${optimize}" 
			target="${javatarget}" 
			source="${sourcerelease}" 
			encoding="${sourceencoding}" 
			deprecation="${deprecation}">
        </javac>
    </target>

	<!-- =================================================================== -->

</project>