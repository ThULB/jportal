<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="MyCoReModule - JPortal" default="usage" basedir="../..">

	<property name="build.sysclasspath" value="last" />
	<import file="${basedir}/common-modules.xml" />
	<property name="env.MYJPORTAL_HOME" value="${basedir}/../myjportal/modules/jportal" />
	<property name="env.JPORTAL_HOME" value="${basedir}/modules/jportal" />
	<property name="module.base" value="jportal" />
	<property name="module.dir" value="${basedir}/modules/${module.base}" />
	<property name="objectTypes" value="person,jpinst,jpjournal,jpvolume,jparticle" />

	<!-- ============================================== -->
	<target name="usage">
		<echo>
          Usage:
            ant [target]

          All targets are internal, use $Docportal/jportal-build.xml

        </echo>
	</target>
	<!-- ============================================== -->
	<target name="jar">
		<if>
			<isset property="MCR.System.SharedJarsDir" />
			<then>
				<copy todir="${build.lib}" preservelastmodified="true">
					<fileset dir="${MCR.System.SharedJarsDir}" includes="*.jar" />
				</copy>
			</then>
		</if>
	</target>

	<target name="create.scripts">
		<echo level="info">
	            building ${ant.project.name} create.scripts
	        </echo>
		<!-- Copy scripts -->
		<chmod perm="755">
			<fileset dir="${build.bin}" includes="*.sh" />
		</chmod>

	</target>

	<!-- =================================================================== -->
	<!-- Create schemas					                                     -->
	<!-- =================================================================== -->
	<target name="create.schema">
		<!-- Translate *.xml to *.xsd using MCRMetadataSchema.xsl -->
		<for list="${objectTypes}" param="objectType" parallel="true">
			<sequential>
				<if>
					<available file="${module.dir}/config/datamodel2/@{objectType}.xml" />
					<then>
						<xslt style="${module.dir}/stylesheets/objecttype.xsl" in="${module.dir}/config/datamodel2/@{objectType}.xml" out="build/schema/datamodel-@{objectType}.xsd" />
					</then>
					<else>
						<antcall target="model2schema">
							<param name="metadata.schema" value="${module.dir}/config/datamodel/@{objectType}.xml" />
						</antcall>
					</else>
				</if>
			</sequential>
		</for>
	</target>

	<target name="config">
		<!-- merge mycore.properties-->
		<mcr-config propertyfile="${build.config}/mycore.properties" mergeFile="${env.JPORTAL_HOME}/config/mycore.properties" />
		<mcr-config propertyfile="${build.config}/mycore.properties" mergeFile="${env.MYJPORTAL_HOME}/config/mycore.properties" />

		<!-- merge searchfields.xml -->
		<xmltask source="${build.config}/searchfields.xml" dest="${build.config}/searchfields.xml">
			<insert path="/:searchfields/:index[1]/:field[8]" position="after" file="${module.dir}/config/searchfields-metadata.xml" />
			<insert path="/:searchfields/:index[2]/:field[3]" position="after" file="${module.dir}/config/searchfields-content.xml" />
		</xmltask>
		<replace file="${build.config}/searchfields.xml" token='xmlns=""' />

		<!-- add cli commands -->
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRJournalSummary" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRJPortalCommands" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRDeadLinkFinder" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRObjectTools" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRUsersGroupsTools" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRClassificationTools" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRJPortalRedundancyCommands" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRJPortalPageGenCommands" />
		<mcr-config action="addInclude" propertyfile="${build.config}/mycore.properties" key="MCR.CLI.Classes.Internal" value="org.mycore.frontend.cli.MCRContentTools" />
	</target>

	<!-- =================================================================== -->
	<!-- create directories   		                                         -->
	<!-- =================================================================== -->
	<target name="create.directories" depends="init" description="Creates directory structure">
		<modulePreHook target="create.directories" />
		<!-- recycle bin dir -->
		<mkdir dir="${MCR.recycleBinExportDir}" />

		<!-- create mcr directories for object types -->
		<for list="${objectTypes}" param="objectType" parallel="true">
			<sequential>
				<mkdir dir="${MCR.SWF.Directory.@{objectType}}" />
			</sequential>
		</for>

	</target>

	<!-- ============================================== -->

	<target name="create.webapp">
		<echo>
            Start building JPortal webapp
        </echo>

		<!-- jportal -->
		<echo>
	         building JPortal webapp
	    </echo>
		<antcall target="jp.webapps.inside">
			<param name="JPortal.HomeURL" value="${env.JPORTAL_HOME}" />
		</antcall>

		<!-- copy editors -->
		<copy todir="${build.webapps}/editor" flatten="true" preservelastmodified="true">
			<fileset dir="${env.JPORTAL_HOME}/config/editor" includes="**/*.xml" excludes="**/editor_default_acls*.xml" />
			<fileset dir="${env.JPORTAL_HOME}/config/editor" includes="editor-*.xml" />
			<fileset dir="${env.JPORTAL_HOME}/config/editor" includes="imports-*.xml" />
		</copy>

		<!-- generate swf pages -->
		<antcall target="genSWFPage" />

		<!-- MyJPortal -->
		<echo>
	         building MyJPortal webapp
	    </echo>
		<antcall target="jp.webapps.inside">
			<param name="JPortal.HomeURL" value="${env.MYJPORTAL_HOME}" />
		</antcall>

		<!-- Registering templates -->
		<echo>
             building JPortal webapp - Registering templates
        </echo>
		<taskdef name="templatecheck" classname="org.mycore.common.MCRTemplateTask" classpathref="application.classpath" />
		<templatecheck templatepath="${build.webapps}/templates/master/" choosepath="${build.webapps}/WEB-INF/classes/xsl/chooseTemplate.xsl" />

	</target>


	<!-- ============================================== -->

	<target name="jp.webapps.inside">

		<!-- file mappings config -->
		<copy todir="${build.webapps}">
			<fileset dir="${JPortal.HomeURL}/config" includes="FileContentTypes.xml" />
			<fileset dir="${JPortal.HomeURL}/config" includes="fileMappings.xml" />
		</copy>

		<!-- web.xml -->
		<available property="web.xml.present" file="${JPortal.HomeURL}/config/web.xml" />
		<antcall target="do.merge">
			<param name="web.xml.file" value="${JPortal.HomeURL}/config/web.xml" />
		</antcall>

		<!-- webpages stuff -->
		<antcall target="jp.webapps.copyWebPages">
			<param name="sourcedir.webpages" value="${JPortal.HomeURL}/webpages" />
		</antcall>

		<!-- xsl -->
		<antcall target="jp.webapps.copyXSL">
			<param name="sourcedir.XSL" value="${JPortal.HomeURL}/stylesheets" />
		</antcall>

		<!-- templates  -->
		<copy todir="${build.webapps}/webpages/templates" failonerror="false">
			<fileset dir="${JPortal.HomeURL}/webpages/templates/" />
		</copy>
		<antcall target="jp.webapps.copyXSL">
			<param name="sourcedir.XSL" value="${JPortal.HomeURL}/webpages/templates/" />
		</antcall>

	</target>

	<!-- ============================================== -->
	
	<target name="genSWFPage">
		<property name="stylesheet" value="${module.dir}/config/swf-page.xsl" />
		<property name="template" value="${module.dir}/config/swf-template.xml" />
		<property name="titleuri" value="${module.dir}/config/swf-titles.xml" />

		<for list="${objectTypes}" param="objectType">
			<sequential>
				<for list="author,commit,editor" param="step">
					<sequential>
						<if>
							<uptodate targetfile="${build.webapps}/editor_form_@{step}-@{objectType}.xml">
								<srcfiles file="${template}" />
								<srcfiles file="${stylesheet}" />
								<srcfiles file="${titleuri}" />
							</uptodate>
							<else>
								<xslt basedir="${module.dir}" classpathref="application.classpath" in="${template}" style="${stylesheet}" out="${build.webapps}/editor_form_@{step}-@{objectType}.xml">
									<param name="objectType" expression="@{objectType}" />
									<param name="step" expression="@{step}" />
									<param name="titleuri" expression="${titleuri}" />
								</xslt>
							</else>
						</if>
					</sequential>
				</for>
				<if>
					<available file="${module.dir}/config/editor/@{objectType}/editor_default_acls_@{objectType}.xml" />
					<then>
						<copy tofile="${build.webapps}/WEB-INF/classes/editor_default_acls_@{objectType}.xml" file="${module.dir}/config/editor/@{objectType}/editor_default_acls_@{objectType}.xml" preservelastmodified="true" />
					</then>
					<else>
						<copy tofile="${build.webapps}/WEB-INF/classes/editor_default_acls_@{objectType}.xml" file="${module.dir}/config/editor/editor_default_acls.xml" preservelastmodified="true" />
					</else>
				</if>
			</sequential>
		</for>
	</target>
	
	<!-- =================================================================== -->

	<target name="i18n">
		<echo level="info">
            building ${ant.project.name} webapp.i18n
        </echo>

		<!-- i18n -->
		<antcall target="properties.merge">
			<param name="module" value="${module.dir}/config/messages_de.properties" />
			<param name="locale_param" value="de" />
		</antcall>
		<antcall target="properties.merge">
			<param name="module" value="${module.dir}/config/messages_en.properties" />
			<param name="locale_param" value="en" />
		</antcall>
		<antcall target="properties.merge">
			<param name="module" value="${module.dir}/config/messages_pl.properties" />
			<param name="locale_param" value="pl" />
		</antcall>

		<antcall target="properties.merge">
			<param name="module" value="${env.MYJPORTAL_HOME}/config/messages_de.properties" />
			<param name="locale_param" value="de" />
		</antcall>
		<antcall target="properties.merge">
			<param name="module" value="${env.MYJPORTAL_HOME}/config/messages_en.properties" />
			<param name="locale_param" value="en" />
		</antcall>
	</target>

	<!-- =================================================================== -->

	<!-- create a new template_DynamicLayoutTemplates.xsl 
	<target name="jp.webapps.dynamicLayoutTemplates">
		<taskdef name="templatecheck" classname="org.mycore.common.MCRDynamicLayoutTemplatesTask" classpathref="application.classpath" />
		<templatecheck choosepath="${build.webapps}/WEB-INF/classes/xsl/template_DynamicLayoutTemplates.xsl" />
	</target>
    -->

	<!-- =================================================================== -->

	<target name="jp.webapps.copyWebPages">
		<!-- webpages stuff to "webapps" -->
		<copy todir="${build.webapps}" failonerror="false">
			<fileset dir="${sourcedir.webpages}" excludes="**/*.xsl" />
		</copy>
	</target>
	<!-- =================================================================== -->

	<target name="jp.webapps.copyXSL">
		<copy todir="${build.webapps}/WEB-INF/classes/xsl" flatten="true" failonerror="false">
			<fileset dir="${sourcedir.XSL}" includes="**/*.xsl" />
		</copy>
	</target>
	<!-- =================================================================== -->

	<target name="compile">
		<echo>Compiling JPortal classes...</echo>
		<antcall target="javac">
			<param name="packages" value="org/mycore/**" />
		</antcall>
	</target>

	<!-- =================================================================== -->

	<target name="javac" depends="init">
		<echo>Compiling ${packages}</echo>
		<javac srcdir="${env.JPORTAL_HOME}/sources" destdir="${build.classes}" includes="${packages}" classpathref="bootstrap.classpath" debug="${debug}" optimize="${optimize}" target="${javatarget}" source="${sourcerelease}" encoding="${sourceencoding}" deprecation="${deprecation}">
		</javac>
	</target>

	<!-- =================================================================== -->

	<!--
	<target name="init">
		<mkdir dir="${basedir}/classes" />
		<path id="mycore.classpath">
			<fileset dir="${basedir}/lib" includes="*.jar" />
			<fileset dir="${env.MYCORE_HOME}/lib" includes="*.jar" />
		</path>
	</target>
    -->

	<!-- =================================================================== -->
	
	
	<!-- =================================================================== -->
	<!-- merge from jportal-build.xml -->
	<!-- =================================================================== -->

	<!-- Read in properties from config/mycore.properties -->
		<loadproperties srcFile="${basedir}/config/mycore.properties.private">
			<filterchain>
				<tokenfilter>
					<replacestring from="%MCR.basedir%" to="${MCR.basedir}" />
					<replacestring from="%MCR.datadir%" to="${MCR.datadir}" />
				</tokenfilter>
			</filterchain>
		</loadproperties>
		<loadproperties srcFile="${env.JPORTAL_HOME}/config/mycore.properties">
			<filterchain>
				<tokenfilter>
					<replacestring from="%MCR.basedir%" to="${MCR.basedir}" />
					<replacestring from="%MCR.datadir%" to="${MCR.datadir}" />
				</tokenfilter>
			</filterchain>
		</loadproperties>

		<property name="acl-description.jp.all" value="always allowed" />
		<property name="acl-description.jp.require-login" value="require login" />
		<property name="acl-description.jp.admins" value="admins" />
		<property name="acl-description.jp.journalAdmins" value="journal admins" />
		<property name="acl-description.jp.editorsTOC" value="journal editors for TOC" />
		<property name="acl-description.jp.editors" value="journal editors" />
		<property name="acl-description.jp.invisible" value="invisible" />

		<!-- =================================================================== -->
		<!-- Load all classifications                                            -->
		<!-- =================================================================== -->

		<target name="create.class" description="Load all JPortal/MYJPORTAL classifications">
			<property name="commands.file" value="${basedir}/commands.txt" />
			<delete file="${commands.file}" />
			<echo file="${commands.file}" append="false">
	    	update all classifications from directory ${env.JPORTAL_HOME}/content/classification
		    update all classifications from directory ${env.MYJPORTAL_HOME}/content/classification
	    </echo>
			<antcall target="invoke.cli">
				<param name="cli.directory" value="${basedir}" />
				<param name="cli.command" value="process ${commands.file}" />
			</antcall>
			<delete file="${commands.file}" />
		</target>

		<!-- =================================================================== -->
		<!-- generate default righmanagement                                     -->
		<!-- =================================================================== -->

		<target name="create.default-rules" description="Load JPortal default ACL rules">
			<!--modulePreHook target="create.default-rules" /-->
			<property name="commands.file" value="${basedir}/commands.txt" />
			<echo file="${commands.file}" append="false">
				<![CDATA[
				load permissions data from file system_permissions.xml

		    	update permission read for id default with rulefile grant-all.xml described by ${acl-description.jp.all}
			    update permission writedb for id default with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				update permission deletedb for id default with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				
				update permission read for id default_jpjournal with rulefile grant-all.xml described by ${acl-description.jp.all}
				update permission read for id default_jpvolume with rulefile grant-all.xml described by ${acl-description.jp.all}
				update permission read for id default_jparticle with rulefile grant-all.xml described by ${acl-description.jp.all}
				update permission read for id default_person with rulefile grant-all.xml described by ${acl-description.jp.all}
				update permission read for id default_jpinst with rulefile grant-all.xml described by ${acl-description.jp.all}
				update permission read for id default_derivate with rulefile grant-all.xml described by ${acl-description.jp.all}

				update permission writedb for id default_jpjournal with rulefile grant-journalgroup.xml described by ${acl-description.jp.journalAdmins}
				update permission writedb for id default_jpvolume with rulefile grant-volumegroup.xml described by ${acl-description.jp.editorsTOC}
				update permission writedb for id default_jparticle with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}
				update permission writedb for id default_person with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}
				update permission writedb for id default_jpinst with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}
				
				update permission deletedb for id default_jpjournal with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				update permission deletedb for id default_jpvolume with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				update permission deletedb for id default_jparticle with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}
				update permission deletedb for id default_person with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}
				update permission deletedb for id default_jpinst with rulefile grant-editorsgroup.xml described by ${acl-description.jp.editors}			
				]]>
		    </echo>
			<!-- specify read access for the webpages -->
			<echo file="${commands.file}" append="true">
				<![CDATA[
		        update permission read for id webpage:/content/main/jpEditors.xml with rulefile require-login.xml described by ${acl-description.jp.require-login}
		        update permission read for id webpage:/content/main/useradmin.xml with rulefile require-login.xml described by ${acl-description.jp.require-login}
				update permission read for id webpage:/content/main/tools.xml with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				update permission read for id webpage:/content/main/recyclebin.xml with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				update permission read for id webpage:/content/main/journalList/dummy.xml with rulefile ever-false.xml described by ${acl-description.jp.invisible}
				
				load permissions data from file wcms-permissions.xml
				update permission write for id webpage:navigation with rulefile grant-admingroup.xml described by ${acl-description.jp.admins}
				]]>
			</echo>
			<antcall target="invoke.cli">
				<param name="cli.directory" value="${basedir}/modules/jportal/config/rightsManag" />
				<param name="cli.command" value="process ${commands.file}" />
			</antcall>
			<delete file="${commands.file}" />
		</target>

		<!-- =================================================================== -->
		<!-- Load users and groups into database                     -->
		<!-- =================================================================== -->

		<target name="create.users" description="Load JPortal base groups into database">
			<echo level="info"> building ${ant.project.name} create.users </echo>
			<property name="commands.file" value="${basedir}/commands.txt" />
			<echo file="${commands.file}" append="false">

	      <!--init superuser-->
	      <!--change to user ${MCR.Users.Superuser.UserName} with alleswirdgut-->
		  <![CDATA[
	      	create group data from file journalgroup.xml
	      	create group data from file volumegroup.xml
	      	create group data from file editorsgroup.xml
		  ]]>
	    </echo>
			<antcall target="invoke.cli">
				<param name="cli.directory" value="${basedir}/modules/jportal/config/usersAndGroups" />
				<param name="cli.command" value="process ${commands.file}" />
			</antcall>
			<delete file="${commands.file}" />
		</target>

		<!-- =================================================================== -->
		<!-- Generate search mask from searchfields.xml                          -->
		<!-- =================================================================== -->

		<target name="create.searchmask" description="Generate search masks from searchfields.xml" depends="init,searchmask-journal,searchmask-volume,searchmask-article,searchmask-inst" />

		<!-- =================================================================== -->
		<target name="searchmask-journal" description="Generate search mask from searchfields.xml">

			<!-- Filename of the editor definition file that defines the search mask form -->
			<property name="filename.editor" value="editor-search-journal.xml" />
			<!-- Filename of the webpage that contains the search mask -->
			<property name="filename.webpage" value="editor_form_search-journal.xml" />
			<!-- i18n key of search mask headline -->
			<property name="headline.i18n" value="editor.search.journal.label" />
			<!-- Title of webpage in German -->
			<property name="title.de" value="Suche nach Journals" />
			<!-- Title of webpage in English -->
			<property name="title.en" value="Search for journals" />
			<!-- ID of the search index(es) to include, multiple indexes separated by blanks -->

			<!-- If this property is set, by default all fields in those indexes are included -->
			<property name="search.indexes" value="metadata" />
			<!-- Name(s) of the search fields to skip, separated by blanks. -->

			<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
			<property name="skip.fields" value="" />
			<!-- Name(s) of the search fields to include, separated by blanks. -->

			<!-- If this property is set, ONLY these search fields will be included in search mask -->
			<property name="search.fields" value="maintitles subtitles mainedis subedis authors contribus dates keywords classis abstracts
	    	identis languages rightsjournal notes types predeces predeceslink successors successorslink" />

			<!-- Optional restriction (hidden condition) for search -->
			<!-- Syntax: "field operator value", separated by blanks -->
			<!-- Example: "objectType = document" -->
			<property name="restriction" value="objectType = jpjournal" />

			<!-- List of fields to include as sort criteria of results -->
			<!-- If empty, sort panel is not displayed -->
			<property name="sort.fields" value="maintitles dates" />

			<!-- If true, include a panel to select hosts to query -->
			<property name="include.hostsSelectionPanel" value="true" />

			<!-- Layout of search mask: simple or advanced -->
			<!-- simple: one line per field, default operator, combine conditions with and -->
			<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
			<property name="layout" value="advanced" />

			<echo>Generating search mask from searchfields.xml</echo>

			<copy file="${mycore}/resources/fieldtypes.xml" toDir="${application.config}" />
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.config}/${filename.editor}" force="true">
				<param name="mode" expression="editor" />
				<param name="filename.webpage" expression="${filename.webpage}" />
				<param name="headline.i18n" expression="${headline.i18n}" />
				<param name="search.indexes" expression="${search.indexes}" />
				<param name="search.fields" expression="${search.fields}" />
				<param name="skip.fields" expression="${skip.fields}" />
				<param name="restriction" expression="${restriction}" />
				<param name="sort.fields" expression="${sort.fields}" />
				<param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel}" />
				<param name="layout" expression="${layout}" />
			</xslt>
			<echo>Generated editor definition file ${filename.editor}</echo>
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.webpages}/${filename.webpage}" force="true">
				<param name="mode" expression="webpage" />
				<param name="filename.editor" expression="${filename.editor}" />
				<param name="title.de" expression="${title.de}" />
				<param name="title.en" expression="${title.en}" />
			</xslt>
			<echo>Generated webpage ${filename.webpage}</echo>
			<delete file="${application.config}/fieldtypes.xml" />
		</target>

		<!-- =================================================================== -->
		<target name="searchmask-volume" description="Generates search mask for volumes">

			<!-- Filename of the editor definition file that defines the search mask form -->
			<property name="filename.editor2" value="editor-search-volume.xml" />
			<!-- Filename of the webpage that contains the search mask -->
			<property name="filename.webpage2" value="editor_form_search-volume.xml" />
			<!-- i18n key of search mask headline -->
			<property name="headline.i18n2" value="editor.search.volume.label" />
			<!-- Title of webpage in German -->
			<property name="title.de2" value="Suche nach Ausgaben" />
			<!-- Title of webpage in English -->
			<property name="title.en2" value="Search for volumes" />
			<!-- ID of the search index(es) to include, multiple indexes separated by blanks -->

			<!-- If this property is set, by default all fields in those indexes are included -->
			<property name="search.indexes2" value="metadata" />
			<!-- Name(s) of the search fields to skip, separated by blanks. -->

			<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
			<property name="skip.fields2" value="" />
			<!-- Name(s) of the search fields to include, separated by blanks. -->

			<!-- If this property is set, ONLY these search fields will be included in search mask -->
			<property name="search.fields2" value="maintitles2 subtitles2 mainedis2 subedis2 authors2 contribus2 dates2 
	    	keywords2 abstracts2 identis2 languages2 rightsjournal2 notes2" />

			<!-- Optional restriction (hidden condition) for search -->
			<!-- Syntax: "field operator value", separated by blanks -->
			<!-- Example: "objectType = document" -->
			<property name="restriction2" value="objectType = jpvolume" />

			<!-- List of fields to include as sort criteria of results -->
			<!-- If empty, sort panel is not displayed -->
			<property name="sort.fields2" value="maintitles dates" />

			<!-- If true, include a panel to select hosts to query -->
			<property name="include.hostsSelectionPanel2" value="true" />

			<!-- Layout of search mask: simple or advanced -->
			<!-- simple: one line per field, default operator, combine conditions with and -->
			<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
			<property name="layout2" value="advanced" />

			<echo>Generating search mask from searchfields.xml</echo>

			<copy file="${mycore}/resources/fieldtypes.xml" toDir="${application.config}" />
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.config}/${filename.editor2}" force="true">
				<param name="mode" expression="editor" />
				<param name="filename.webpage" expression="${filename.webpage2}" />
				<param name="headline.i18n" expression="${headline.i18n2}" />
				<param name="search.indexes" expression="${search.indexes2}" />
				<param name="search.fields" expression="${search.fields2}" />
				<param name="skip.fields" expression="${skip.fields2}" />
				<param name="restriction" expression="${restriction2}" />
				<param name="sort.fields" expression="${sort.fields2}" />
				<param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel2}" />
				<param name="layout" expression="${layout2}" />
			</xslt>
			<echo>Generated editor definition file ${filename.editor2}</echo>
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.webpages}/${filename.webpage2}" force="true">
				<param name="mode" expression="webpage" />
				<param name="filename.editor" expression="${filename.editor2}" />
				<param name="title.de" expression="${title.de2}" />
				<param name="title.en" expression="${title.en2}" />
			</xslt>
			<echo>Generated webpage ${filename.webpage2}</echo>
			<delete file="${application.config}/fieldtypes.xml" />
		</target>

		<!-- =================================================================== -->
		<target name="searchmask-article" description="Generates search mask for volumes">

			<!-- Filename of the editor definition file that defines the search mask form -->
			<property name="filename.editor3" value="editor-search-article.xml" />
			<!-- Filename of the webpage that contains the search mask -->
			<property name="filename.webpage3" value="editor_form_search-article.xml" />
			<!-- i18n key of search mask headline -->
			<property name="headline.i18n3" value="editor.search.article.label" />
			<!-- Title of webpage in German -->
			<property name="title.de3" value="Suche nach Artikeln" />
			<!-- Title of webpage in English -->
			<property name="title.en3" value="Search for articles" />
			<!-- ID of the search index(es) to include, multiple indexes separated by blanks -->

			<!-- If this property is set, by default all fields in those indexes are included -->
			<property name="search.indexes3" value="metadata" />
			<!-- Name(s) of the search fields to skip, separated by blanks. -->

			<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
			<property name="skip.fields3" value="" />
			<!-- Name(s) of the search fields to include, separated by blanks. -->

			<!-- If this property is set, ONLY these search fields will be included in search mask -->
			<property name="search.fields3" value="maintitles3 subtitles3 publishers3 authors3 contribus3 dates3 
	    	keywords3 classis3 classispub classispub2 classispub3 abstracts3 identis3 languages3 rightsjournal3
	    	notes3 types3 rubrics3 sizes3 refs3" />

			<!-- Optional restriction (hidden condition) for search -->
			<!-- Syntax: "field operator value", separated by blanks -->
			<!-- Example: "objectType = document" -->
			<property name="restriction3" value="objectType = jparticle" />

			<!-- List of fields to include as sort criteria of results -->
			<!-- If empty, sort panel is not displayed -->
			<property name="sort.fields3" value="maintitles dates" />

			<!-- If true, include a panel to select hosts to query -->
			<property name="include.hostsSelectionPanel3" value="true" />

			<!-- Layout of search mask: simple or advanced -->
			<!-- simple: one line per field, default operator, combine conditions with and -->
			<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
			<property name="layout3" value="advanced" />

			<echo>Generating search mask from searchfields.xml</echo>

			<copy file="${mycore}/resources/fieldtypes.xml" toDir="${application.config}" />
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.config}/${filename.editor3}" force="true">
				<param name="mode" expression="editor" />
				<param name="filename.webpage" expression="${filename.webpage3}" />
				<param name="headline.i18n" expression="${headline.i18n3}" />
				<param name="search.indexes" expression="${search.indexes3}" />
				<param name="search.fields" expression="${search.fields3}" />
				<param name="skip.fields" expression="${skip.fields3}" />
				<param name="restriction" expression="${restriction3}" />
				<param name="sort.fields" expression="${sort.fields3}" />
				<param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel3}" />
				<param name="layout" expression="${layout3}" />
			</xslt>
			<echo>Generated editor definition file ${filename.editor3}</echo>
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.webpages}/${filename.webpage3}" force="true">
				<param name="mode" expression="webpage" />
				<param name="filename.editor" expression="${filename.editor3}" />
				<param name="title.de" expression="${title.de3}" />
				<param name="title.en" expression="${title.en3}" />
			</xslt>
			<echo>Generated webpage ${filename.webpage3}</echo>
			<delete file="${application.config}/fieldtypes.xml" />
		</target>

		<!-- =================================================================== -->
		<target name="searchmask-inst" description="Generates search mask for inst">

			<!-- Filename of the editor definition file that defines the search mask form -->
			<property name="filename.editor4" value="editor-search-inst.xml" />
			<!-- Filename of the webpage that contains the search mask -->
			<property name="filename.webpage4" value="editor_form_search-inst.xml" />
			<!-- i18n key of search mask headline -->
			<property name="headline.i18n3" value="editor.search.inst.label" />
			<!-- Title of webpage in German -->
			<property name="title.de4" value="Suche nach Artikeln" />
			<!-- Title of webpage in English -->
			<property name="title.en4" value="Search for inst" />
			<!-- ID of the search index(es) to include, multiple indexes separated by blanks -->

			<!-- If this property is set, by default all fields in those indexes are included -->
			<property name="search.indexes4" value="metadata" />
			<!-- Name(s) of the search fields to skip, separated by blanks. -->

			<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
			<property name="skip.fields4" value="" />
			<!-- Name(s) of the search fields to include, separated by blanks. -->

			<!-- If this property is set, ONLY these search fields will be included in search mask -->
			<property name="search.fields3" value="name" />

			<!-- Optional restriction (hidden condition) for search -->
			<!-- Syntax: "field operator value", separated by blanks -->
			<!-- Example: "objectType = document" -->
			<property name="restriction4" value="objectType = jpinst" />

			<!-- List of fields to include as sort criteria of results -->
			<!-- If empty, sort panel is not displayed -->
			<property name="sort.fields4" value="name" />

			<!-- If true, include a panel to select hosts to query 
		    <property name="include.hostsSelectionPanel3" value="true" />
		  	-->
			<!-- Layout of search mask: simple or advanced -->
			<!-- simple: one line per field, default operator, combine conditions with and -->
			<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
			<property name="layout4" value="advanced" />

			<echo>Generating search mask from searchfields.xml</echo>

			<copy file="${mycore}/resources/fieldtypes.xml" toDir="${application.config}" />
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.config}/${filename.editor4}" force="true">
				<param name="mode" expression="editor" />
				<param name="filename.webpage" expression="${filename.webpage4}" />
				<param name="headline.i18n" expression="${headline.i18n4}" />
				<param name="search.indexes" expression="${search.indexes4}" />
				<param name="search.fields" expression="${search.fields4}" />
				<param name="skip.fields" expression="${skip.fields4}" />
				<param name="restriction" expression="${restriction4}" />
				<param name="sort.fields" expression="${sort.fields4}" />
				<param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel4}" />
				<param name="layout" expression="${layout4}" />
			</xslt>
			<echo>Generated editor definition file ${filename.editor4}</echo>
			<xslt basedir="${application.config}" classpathref="application.classpath" in="${build.config}/searchfields.xml" style="${mycore.stylesheets}/searchfields2searchmask.xsl" out="${application.webpages}/${filename.webpage4}" force="true">
				<param name="mode" expression="webpage" />
				<param name="filename.editor" expression="${filename.editor4}" />
				<param name="title.de" expression="${title.de4}" />
				<param name="title.en" expression="${title.en4}" />
			</xslt>
			<echo>Generated webpage ${filename.webpage4}</echo>
			<delete file="${application.config}/fieldtypes.xml" />
		</target>
</project>
