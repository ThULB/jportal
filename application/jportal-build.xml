<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="jportal" default="usage" basedir=".">
	<import file="${basedir}/build.xml" />

	  <property name="env.MYJPORTAL_HOME" value="${basedir}/../myjportal" />	
	  <property name="env.JPORTAL_HOME" value="${basedir}/jportal-add-ons" />		
	
	  <!-- Read in properties from config/mycore.properties.jp -->
	  <loadproperties srcFile="${basedir}/config/mycore.properties.jp">
	    <filterchain>
	      <linecontains>
	        <contains value="MCR.basedir=" />
	      </linecontains>
	    </filterchain>
	  </loadproperties>
	  <loadproperties srcFile="${basedir}/config/mycore.properties.jp">
	    <filterchain>
	      <tokenfilter>
	        <replacestring from="%MCR.basedir%" to="${MCR.basedir}" />
	      </tokenfilter>
	    </filterchain>
	  </loadproperties>
	
  <!-- =================================================================== -->
  <!-- Create schemas					                                   -->
  <!-- =================================================================== -->	
	<target name="jp.create.schema" depends="create.schema">
	    <!-- Translate *.xml to *.xsd using MCRMetadataSchema.xsl -->
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpjournal}"    /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpvolume}"    /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jparticle}" /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpperson}" /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpinst}" /></antcall>		
	    <move todir="${docportal.schema}">
	      <fileset dir="${docportal.schema}" 
	        includes="${MCR.persistence_config_jpjournal} 
	      	${MCR.persistence_config_jpvolume} 
	      	${MCR.persistence_config_jparticle} 
	      	${MCR.persistence_config_jpperson} 
	      	${MCR.persistence_config_jpinst}" 
	      />
	      <mapper type="glob" from="*.xml" to="*.xsd"/>
	    </move>
	</target>
	
	  <target name="jp.do.transform" depends="init">
	    <echo>Transforming ${metadata.schema}...</echo>
	    <xslt basedir="${env.JPORTAL_HOME}/config/${metadata.schema}"
	          classpathref="docportal.classpath"
	          in="${env.JPORTAL_HOME}/config/${metadata.schema}"
	          style="stylesheets/MCRMetadataSchema.xsl"
	          out="schema/${metadata.schema}" />
	  </target>		

  <!-- =================================================================== -->
  <!-- Create local working directories                                    -->
  <!-- =================================================================== -->	
	<target name="jp.create.directories" depends="create.directories">
	    <mkdir dir="${MCR.editor_jpjournal_directory}" />
	    <mkdir dir="${MCR.editor_jpvolume_directory}" />
	    <mkdir dir="${MCR.editor_jparticle_directory}" />
	    <mkdir dir="${MCR.editor_jpperson_directory}" />
	    <mkdir dir="${MCR.editor_jpinst_directory}" />		
	</target>
	
  <!-- =================================================================== -->
  <!-- Load all classifications                                            -->
  <!-- =================================================================== -->

  <target name="jp.create.class" depends="init" description="Load all JPortal/MYJPORTAL classifications">
    <property name="commands.file" value="${basedir}/commands.txt"/>
    <delete file="${commands.file}" />
    <echo file="${commands.file}" append="false">
    	update all classifications from directory ${env.JPORTAL_HOME}/content/classification
	    update all classifications from directory ${env.MYJPORTAL_HOME}/content/classification
    </echo>
    <antcall target="invoke.cli">
      <param name="cli.directory" value="${basedir}" />
      <param name="cli.command"   value="process ${commands.file}" />
    </antcall>
    <delete file="${commands.file}" />
  </target>	
	
  <!-- =================================================================== -->
  <!-- Build web application                                               -->
  <!-- =================================================================== -->
	
	<target name="create.default-rules" depends="init" description="Load default ACL rules">
		<property name="commands.file" value="${basedir}/commands.txt" />
		<echo file="${commands.file}" append="false">
	    	update permission read for id default with rulefile grant-all.xml
	    	update permission writedb for id default with rulefile grant-editors.xml
	    	update permission deletedb for id default with rulefile grant-admins.xml
	    </echo>
		<!-- this demonstrates how to specify default rules on a basis of an object type -->
		<!--
		<echo file="${commands.file}" append="true">
	    	update permission read for id default_akte with rulefile grant-all.xml
	    	update permission writedb for id default_akte with rulefile grant-editors.xml
	    	update permission deletedb for id default_akte with rulefile grant-admins.xml
	    </echo>
	    -->
		<antcall target="invoke.cli">
			<param name="cli.directory" value="${basedir}/config/acl" />
			<param name="cli.command" value="process ${commands.file}" />
		</antcall>
		<delete file="${commands.file}" />
	</target>	
	
  <!-- =================================================================== -->
  <!-- Build web application                                               -->
  <!-- =================================================================== -->
  <target name="jp.webapps" >
  	
  	<!-- get JPORTAL sources -->
  	<!-- ############################# -->
	  	<!-- get editors -->
    <copy todir="${docportal.webapps}/editor">
      <fileset dir="${env.JPORTAL_HOME}/config" includes="editor-*.xml" />
      <fileset dir="${env.JPORTAL_HOME}/config" includes="imports-*.xml" />
    </copy>  	
	<antcall target="jp.webapps.copyWebPages">
		<param name="sourcedir.webpages" value="${env.JPORTAL_HOME}/webpages" />
	</antcall>
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.JPORTAL_HOME}/stylesheets" />
	</antcall>  	
  	
  	<!-- get MYJPORTAL sources -->
  	<!-- ############################# -->  	
	  	<!-- webpages stuff to "webapps" -->
	<antcall target="jp.webapps.copyWebPages">
		<param name="sourcedir.webpages" value="${env.MYJPORTAL_HOME}/webpages" />
	</antcall>
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.MYJPORTAL_HOME}/stylesheets" />
	</antcall>  	  	
  	<!-- get templates  -->
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.MYJPORTAL_HOME}/webpages/templates/master" />
	</antcall>  	  	  	

  	<!-- docportal sources -->
  	<!-- ############################# -->  	  	
  	<antcall target="webapps"/>
  </target>
	
  <!-- =================================================================== -->
	
	<target name="jp.webapps.copyWebPages">
	  	<!-- webpages stuff to "webapps" -->
	    <copy todir="${docportal.webapps}" failonerror="false">
	      <fileset dir="${sourcedir.webpages}" excludes="**/*.xsl" />
	    </copy>  		
	</target>

  <!-- =================================================================== -->	

	<target name="jp.webapps.copyXSL">
	    <copy todir="${docportal.webapps}/WEB-INF/stylesheets" flatten="true" failonerror="false">
	      <fileset dir="${sourcedir.XSL}"   includes="**/*.xsl" />
	    </copy>
	</target>

  <!-- =================================================================== -->	
	
  <target name="jp.jar" depends="jar" description="creates lib/jportal.jar">
    <echo>Creating jportal.jar containing all compiled classes...</echo>
    <mkdir dir="${env.JPORTAL_HOME}/classes"/>
    <echo>Compiling JPortal sources...</echo>
    <antcall target="jp.javac">
      <param name="packages" value="org/mycore/**"/>
    </antcall>  	
    <jar destfile="${docportal.lib}/jportal.jar" >
      <fileset dir="${env.JPORTAL_HOME}/classes" includes="**/*.class"       />
    </jar>
  </target>	
  <!-- =================================================================== -->	
  <target name="jp.javac" depends="init">
    <echo>Compiling ${packages}</echo>
    <javac srcdir="${env.JPORTAL_HOME}/sources"
           destdir="${env.JPORTAL_HOME}/classes"
           includes="${packages}"
           classpathref="docportal.classpath"
           debug="${debug}"
           optimize="${optimize}"
           target="${javatarget}"
           source="${sourcerelease}"
           encoding="${sourceencoding}"
           deprecation="${deprecation}">
    </javac>
  </target>	
	
  <!-- =================================================================== -->	
	
  <!-- =================================================================== -->
  <!-- Generate search mask from searchfields.xml                          -->
  <!-- =================================================================== -->

  <target name="jp.create.searchmask" description="Generate search masks from searchfields.xml" depends="init,searchmask-journal,searchmask-volume,searchmask-article" />		

  <!-- =================================================================== -->	
  <target name="searchmask-journal" description="Generate search mask from searchfields.xml">
		
    <!-- Filename of the editor definition file that defines the search mask form -->
    <property name="filename.editor"  value="editor-search-journal.xml" />
    <!-- Filename of the webpage that contains the search mask -->
    <property name="filename.webpage" value="editor_form_search-journal.xml" />
    <!-- i18n key of search mask headline -->
    <property name="headline.i18n" value="editor.search.journal.label" />
    <!-- Title of webpage in German -->
    <property name="title.de" value="Suche nach Journals" />
    <!-- Title of webpage in English -->
    <property name="title.en" value="Search for journals" />
    <!-- ID of the search index(es) to include, multiple indexes separated by blanks -->
    
  	<!-- If this property is set, by default all fields in those indexes are included -->
    <property name="search.indexes" value="metadata" />
    <!-- Name(s) of the search fields to skip, separated by blanks. -->
    
  	<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
    <property name="skip.fields" value="" />
    <!-- Name(s) of the search fields to include, separated by blanks. -->
    
  	<!-- If this property is set, ONLY these search fields will be included in search mask -->
    <property name="search.fields" value="maintitles subtitles mainedis subedis authors contribus dates keywords classis abstracts
    	identis languages rightsjournal notes types predeces predeceslink successors successorslink" />
    
  	<!-- Optional restriction (hidden condition) for search -->
    <!-- Syntax: "field operator value", separated by blanks -->
    <!-- Example: "objectType = document" -->
    <property name="restriction" value="objectType = jpjournal" />
    
  	<!-- List of fields to include as sort criteria of results -->
    <!-- If empty, sort panel is not displayed -->
    <property name="sort.fields" value="maintitles dates" />

    <!-- If true, include a panel to select hosts to query -->
    <property name="include.hostsSelectionPanel" value="true" />
  	
  	<!-- Layout of search mask: simple or advanced -->
  	<!-- simple: one line per field, default operator, combine conditions with and -->
  	<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
  	<property name="layout" value="advanced" />
		
  	<echo>Generating search mask from searchfields.xml</echo>
  	
    <copy file="${mycore.config}/fieldtypes.xml" toDir="${docportal.config}" />
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.config}/${filename.editor}"
    	    force="true">
      <param name="mode" expression="editor" />
      <param name="filename.webpage" expression="${filename.webpage}" />
      <param name="headline.i18n" expression="${headline.i18n}" />
      <param name="search.indexes" expression="${search.indexes}" />
      <param name="search.fields" expression="${search.fields}" />
      <param name="skip.fields" expression="${skip.fields}" />
    	<param name="restriction" expression="${restriction}" />
      <param name="sort.fields" expression="${sort.fields}" />
      <param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel}" />
    	<param name="layout" expression="${layout}" />
    </xslt>
  	<echo>Generated editor definition file ${filename.editor}</echo>
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.webpages}/${filename.webpage}"
    	    force="true">
      <param name="mode" expression="webpage" />
      <param name="filename.editor" expression="${filename.editor}" />
      <param name="title.de" expression="${title.de}" />
      <param name="title.en" expression="${title.en}" />
    </xslt>
  	<echo>Generated webpage ${filename.webpage}</echo>
    <delete file="${docportal.config}/fieldtypes.xml" />
  </target>	
	
  <!-- =================================================================== -->
  <target name="searchmask-volume" description="Generates search mask for volumes">
		
    <!-- Filename of the editor definition file that defines the search mask form -->
    <property name="filename.editor2"  value="editor-search-volume.xml" />
    <!-- Filename of the webpage that contains the search mask -->
    <property name="filename.webpage2" value="editor_form_search-volume.xml" />
    <!-- i18n key of search mask headline -->
    <property name="headline.i18n2" value="editor.search.volume.label" />
    <!-- Title of webpage in German -->
    <property name="title.de2" value="Suche nach Ausgaben" />
    <!-- Title of webpage in English -->
    <property name="title.en2" value="Search for volumes" />
    <!-- ID of the search index(es) to include, multiple indexes separated by blanks -->
    
  	<!-- If this property is set, by default all fields in those indexes are included -->
    <property name="search.indexes2" value="metadata" />
    <!-- Name(s) of the search fields to skip, separated by blanks. -->
    
  	<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
    <property name="skip.fields2" value="" />
    <!-- Name(s) of the search fields to include, separated by blanks. -->
    
  	<!-- If this property is set, ONLY these search fields will be included in search mask -->
    <property name="search.fields2" value="maintitles2 subtitles2 mainedis2 subedis2 authors2 contribus2 dates2 
    	keywords2 abstracts2 identis2 languages2 rightsjournal2 notes2" />
    
  	<!-- Optional restriction (hidden condition) for search -->
    <!-- Syntax: "field operator value", separated by blanks -->
    <!-- Example: "objectType = document" -->
    <property name="restriction2" value="objectType = jpvolume" />
    
  	<!-- List of fields to include as sort criteria of results -->
    <!-- If empty, sort panel is not displayed -->
    <property name="sort.fields2" value="maintitles dates" />

    <!-- If true, include a panel to select hosts to query -->
    <property name="include.hostsSelectionPanel2" value="true" />
  	
  	<!-- Layout of search mask: simple or advanced -->
  	<!-- simple: one line per field, default operator, combine conditions with and -->
  	<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
  	<property name="layout2" value="advanced" />
		
  	<echo>Generating search mask from searchfields.xml</echo>
  	
    <copy file="${mycore.config}/fieldtypes.xml" toDir="${docportal.config}" />
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.config}/${filename.editor2}"
    	    force="true">
      <param name="mode" expression="editor" />
      <param name="filename.webpage" expression="${filename.webpage2}" />
      <param name="headline.i18n" expression="${headline.i18n2}" />
      <param name="search.indexes" expression="${search.indexes2}" />
      <param name="search.fields" expression="${search.fields2}" />
      <param name="skip.fields" expression="${skip.fields2}" />
    	<param name="restriction" expression="${restriction2}" />
      <param name="sort.fields" expression="${sort.fields2}" />
      <param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel2}" />
    	<param name="layout" expression="${layout2}" />
    </xslt>
  	<echo>Generated editor definition file ${filename.editor2}</echo>
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.webpages}/${filename.webpage2}"
    	    force="true">
      <param name="mode" expression="webpage" />
      <param name="filename.editor" expression="${filename.editor2}" />
      <param name="title.de" expression="${title.de2}" />
      <param name="title.en" expression="${title.en2}" />
    </xslt>
  	<echo>Generated webpage ${filename.webpage2}</echo>
    <delete file="${docportal.config}/fieldtypes.xml" />
  </target>	

  <!-- =================================================================== -->
  <target name="searchmask-article" description="Generates search mask for volumes">
		
    <!-- Filename of the editor definition file that defines the search mask form -->
    <property name="filename.editor3"  value="editor-search-article.xml" />
    <!-- Filename of the webpage that contains the search mask -->
    <property name="filename.webpage3" value="editor_form_search-article.xml" />
    <!-- i18n key of search mask headline -->
    <property name="headline.i18n3" value="editor.search.article.label" />
    <!-- Title of webpage in German -->
    <property name="title.de3" value="Suche nach Artikeln" />
    <!-- Title of webpage in English -->
    <property name="title.en3" value="Search for articles" />
    <!-- ID of the search index(es) to include, multiple indexes separated by blanks -->
    
  	<!-- If this property is set, by default all fields in those indexes are included -->
    <property name="search.indexes3" value="metadata" />
    <!-- Name(s) of the search fields to skip, separated by blanks. -->
    
  	<!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
    <property name="skip.fields3" value="" />
    <!-- Name(s) of the search fields to include, separated by blanks. -->
    
  	<!-- If this property is set, ONLY these search fields will be included in search mask -->
    <property name="search.fields3" value="maintitles3 subtitles3 publishers3 authors3 contribus3 dates3 
    	keywords3 classis3 classispub classispub2 classispub3 abstracts3 identis3 languages3 rightsjournal3
    	notes3 types3 rubrics3 sizes3 refs3" />
    
  	<!-- Optional restriction (hidden condition) for search -->
    <!-- Syntax: "field operator value", separated by blanks -->
    <!-- Example: "objectType = document" -->
    <property name="restriction3" value="objectType = jparticle" />
    
  	<!-- List of fields to include as sort criteria of results -->
    <!-- If empty, sort panel is not displayed -->
    <property name="sort.fields3" value="maintitles dates" />

    <!-- If true, include a panel to select hosts to query -->
    <property name="include.hostsSelectionPanel3" value="true" />
  	
  	<!-- Layout of search mask: simple or advanced -->
  	<!-- simple: one line per field, default operator, combine conditions with and -->
  	<!-- advanced: choose fields and operators from drop-down list, choose and/or -->
  	<property name="layout3" value="advanced" />
		
  	<echo>Generating search mask from searchfields.xml</echo>
  	
    <copy file="${mycore.config}/fieldtypes.xml" toDir="${docportal.config}" />
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.config}/${filename.editor3}"
    	    force="true">
      <param name="mode" expression="editor" />
      <param name="filename.webpage" expression="${filename.webpage3}" />
      <param name="headline.i18n" expression="${headline.i18n3}" />
      <param name="search.indexes" expression="${search.indexes3}" />
      <param name="search.fields" expression="${search.fields3}" />
      <param name="skip.fields" expression="${skip.fields3}" />
    	<param name="restriction" expression="${restriction3}" />
      <param name="sort.fields" expression="${sort.fields3}" />
      <param name="include.hostsSelectionPanel" expression="${include.hostsSelectionPanel3}" />
    	<param name="layout" expression="${layout3}" />
    </xslt>
  	<echo>Generated editor definition file ${filename.editor3}</echo>
    <xslt basedir="${docportal.config}"
          classpathref="docportal.classpath"
          in="${docportal.config}/searchfields.xml"
          style="${mycore.stylesheets}/searchfields2searchmask.xsl"
          out="${docportal.webpages}/${filename.webpage3}"
    	    force="true">
      <param name="mode" expression="webpage" />
      <param name="filename.editor" expression="${filename.editor3}" />
      <param name="title.de" expression="${title.de3}" />
      <param name="title.en" expression="${title.en3}" />
    </xslt>
  	<echo>Generated webpage ${filename.webpage3}</echo>
    <delete file="${docportal.config}/fieldtypes.xml" />
  </target>
	
	
</project>