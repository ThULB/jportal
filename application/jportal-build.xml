<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="jportal" default="usage" basedir=".">
	<import file="${basedir}/build.xml" />

	  <property name="env.MYJPORTAL_HOME" value="${basedir}/../myjportal" />	
	  <property name="env.JPORTAL_HOME" value="${basedir}/jportal-add-ons" />		
	
	  <!-- Read in properties from config/mycore.properties.jp -->
	  <loadproperties srcFile="${basedir}/config/mycore.properties.jp">
	    <filterchain>
	      <linecontains>
	        <contains value="MCR.basedir=" />
	      </linecontains>
	    </filterchain>
	  </loadproperties>
	  <loadproperties srcFile="${basedir}/config/mycore.properties.jp">
	    <filterchain>
	      <tokenfilter>
	        <replacestring from="%MCR.basedir%" to="${MCR.basedir}" />
	      </tokenfilter>
	    </filterchain>
	  </loadproperties>
	
  <!-- =================================================================== -->
  <!-- Create schemas					                                   -->
  <!-- =================================================================== -->	
	<target name="jp.create.schema" depends="create.schema">
	    <!-- Translate *.xml to *.xsd using MCRMetadataSchema.xsl -->
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpjournal}"    /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpvolume}"    /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jparticle}" /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpperson}" /></antcall>
	    <antcall target="jp.do.transform"><param name="metadata.schema" value="${MCR.persistence_config_jpinst}" /></antcall>		
	    <move todir="${docportal.schema}">
	      <fileset dir="${docportal.schema}" 
	        includes="${MCR.persistence_config_jpjournal} 
	      	${MCR.persistence_config_jpvolume} 
	      	${MCR.persistence_config_jparticle} 
	      	${MCR.persistence_config_jpperson} 
	      	${MCR.persistence_config_jpinst}" 
	      />
	      <mapper type="glob" from="*.xml" to="*.xsd"/>
	    </move>
	</target>
	
	  <target name="jp.do.transform" depends="init">
	    <echo>Transforming ${metadata.schema}...</echo>
	    <xslt basedir="${env.JPORTAL_HOME}/config/${metadata.schema}"
	          classpathref="docportal.classpath"
	          in="${env.JPORTAL_HOME}/config/${metadata.schema}"
	          style="stylesheets/MCRMetadataSchema.xsl"
	          out="schema/${metadata.schema}" />
	  </target>		

  <!-- =================================================================== -->
  <!-- Create local working directories                                    -->
  <!-- =================================================================== -->	
	<target name="jp.create.directories" depends="create.directories">
	    <mkdir dir="${MCR.editor_jpjournal_directory}" />
	    <mkdir dir="${MCR.editor_jpvolume_directory}" />
	    <mkdir dir="${MCR.editor_jparticle_directory}" />
	    <mkdir dir="${MCR.editor_jpperson_directory}" />
	    <mkdir dir="${MCR.editor_jpinst_directory}" />		
	</target>
	
  <!-- =================================================================== -->
  <!-- Load all classifications                                            -->
  <!-- =================================================================== -->

  <target name="jp.create.class" depends="init" description="Load all JPortal/MYJPORTAL classifications">
    <property name="commands.file" value="${basedir}/commands.txt"/>
    <delete file="${commands.file}" />
    <echo file="${commands.file}" append="false">
    	update all classifications from directory ${env.JPORTAL_HOME}/content/classification
	    update all classifications from directory ${env.MYJPORTAL_HOME}/content/classification
    </echo>
    <antcall target="invoke.cli">
      <param name="cli.directory" value="${basedir}" />
      <param name="cli.command"   value="process ${commands.file}" />
    </antcall>
    <delete file="${commands.file}" />
  </target>	
	
  <!-- =================================================================== -->
  <!-- Build web application                                               -->
  <!-- =================================================================== -->
	
	<target name="create.default-rules" depends="init" description="Load default ACL rules">
		<property name="commands.file" value="${basedir}/commands.txt" />
		<echo file="${commands.file}" append="false">
	    	update permission read for id default with rulefile grant-all.xml
	    	update permission writedb for id default with rulefile grant-editors.xml
	    	update permission deletedb for id default with rulefile grant-admins.xml
	    </echo>
		<!-- this demonstrates how to specify default rules on a basis of an object type -->
		<!--
		<echo file="${commands.file}" append="true">
	    	update permission read for id default_akte with rulefile grant-all.xml
	    	update permission writedb for id default_akte with rulefile grant-editors.xml
	    	update permission deletedb for id default_akte with rulefile grant-admins.xml
	    </echo>
	    -->
		<antcall target="invoke.cli">
			<param name="cli.directory" value="${basedir}/config/acl" />
			<param name="cli.command" value="process ${commands.file}" />
		</antcall>
		<delete file="${commands.file}" />
	</target>	
	
  <!-- =================================================================== -->
  <!-- Build web application                                               -->
  <!-- =================================================================== -->
  <target name="jp.webapps" >
  	
  	<!-- get JPORTAL sources -->
  	<!-- ############################# -->
	  	<!-- get editors -->
    <copy todir="${docportal.webapps}/editor">
      <fileset dir="${env.JPORTAL_HOME}/config" includes="editor-*.xml" />
      <fileset dir="${env.JPORTAL_HOME}/config" includes="imports-*.xml" />
    </copy>  	
	<antcall target="jp.webapps.copyWebPages">
		<param name="sourcedir.webpages" value="${env.JPORTAL_HOME}/webpages" />
	</antcall>
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.JPORTAL_HOME}/stylesheets" />
	</antcall>  	
  	
  	<!-- get MYJPORTAL sources -->
  	<!-- ############################# -->  	
	  	<!-- webpages stuff to "webapps" -->
	<antcall target="jp.webapps.copyWebPages">
		<param name="sourcedir.webpages" value="${env.MYJPORTAL_HOME}/webpages" />
	</antcall>
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.MYJPORTAL_HOME}/stylesheets" />
	</antcall>  	  	
  	<!-- get templates  -->
	<antcall target="jp.webapps.copyXSL">
		<param name="sourcedir.XSL" value="${env.MYJPORTAL_HOME}/webpages/templates/master" />
	</antcall>  	  	  	

  	<!-- docportal sources -->
  	<!-- ############################# -->  	  	
  	<antcall target="webapps"/>
  </target>
	
  <!-- =================================================================== -->
	
	<target name="jp.webapps.copyWebPages">
	  	<!-- webpages stuff to "webapps" -->
	    <copy todir="${docportal.webapps}" failonerror="false">
	      <fileset dir="${sourcedir.webpages}" excludes="**/*.xsl" />
	    </copy>  		
	</target>

  <!-- =================================================================== -->	

	<target name="jp.webapps.copyXSL">
	    <copy todir="${docportal.webapps}/WEB-INF/stylesheets" flatten="true" failonerror="false">
	      <fileset dir="${sourcedir.XSL}"   includes="**/*.xsl" />
	    </copy>
	</target>

  <!-- =================================================================== -->	
	
  <target name="jp.jar" depends="jar" description="creates lib/jportal.jar">
    <echo>Creating jportal.jar containing all compiled classes...</echo>
    <mkdir dir="${env.JPORTAL_HOME}/classes"/>
    <echo>Compiling JPortal sources...</echo>
    <antcall target="jp.javac">
      <param name="packages" value="org/mycore/**"/>
    </antcall>  	
    <jar destfile="${docportal.lib}/jportal.jar" >
      <fileset dir="${env.JPORTAL_HOME}/classes" includes="**/*.class"       />
    </jar>
  </target>	
  <!-- =================================================================== -->	
  <target name="jp.javac" depends="init">
    <echo>Compiling ${packages}</echo>
    <javac srcdir="${env.JPORTAL_HOME}/sources"
           destdir="${env.JPORTAL_HOME}/classes"
           includes="${packages}"
           classpathref="docportal.classpath"
           debug="${debug}"
           optimize="${optimize}"
           target="${javatarget}"
           source="${sourcerelease}"
           encoding="${sourceencoding}"
           deprecation="${deprecation}">
    </javac>
  </target>	
	
  <!-- =================================================================== -->		
	
</project>