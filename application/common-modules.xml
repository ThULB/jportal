<project name="docportal" basedir=".">

  <!-- =================================================================== -->
  <!-- Global properties                                                   -->
  <!-- $Revision: 1.35 $ $Date: 2007-12-20 10:59:42 $                     -->
  <!-- =================================================================== -->

  <!-- Javac properties -->
  <property name="debug" value="on" />
  <property name="optimize" value="on" />
  <property name="deprecation" value="off" />
  <property name="javatarget" value="1.5" />
  <property name="sourcerelease" value="1.5" />
  <property name="sourceencoding" value="ISO-8859-15" />

  <!-- Maximum amount of memory to allocate to java VM when loading -->
  <property name="java.maxmemory" value="512m" />

  <!-- Read in environment variables -->
  <property environment="env" />

  <!-- Provide a default value for MYCORE_HOME if not set in env -->
  <property name="env.MYCORE_HOME" value="../mycore" />
  <dirname file="${env.MYCORE_HOME}/build.xml" property="mycore" />

  <!-- Provide a default value for DOCPORTAL_HOME if not set in env -->
  <property name="env.DOCPORTAL_HOME" value="${basedir}" />

  <!-- Read in properties from config/mycore.properties.private -->
  <loadproperties srcFile="${basedir}/config/mycore.properties.private">
    <filterchain>
      <linecontains>
        <contains value="MCR.basedir=" />
      </linecontains>
    </filterchain>
    <filterchain>
      <linecontains>
        <contains value="MCR.datadir=" />
      </linecontains>
    </filterchain>
  </loadproperties>
  <loadproperties srcFile="${basedir}/config/mycore.properties.private">
    <filterchain>
      <tokenfilter>
        <replacestring from="%MCR.basedir%" to="${MCR.basedir}" />
        <replacestring from="%MCR.datadir%" to="${MCR.datadir}" />
      </tokenfilter>
    </filterchain>
  </loadproperties>

  <!-- MyCoRe CVS repository root -->
  <property name="CVSRoot" value="/cvs" />

  <property name="mycore.config" value="${mycore}/config" />
  <property name="mycore.doc" value="${mycore}/documentation" />
  <property name="mycore.lib" value="${mycore}/build/lib" />
  <property name="mycore.modules" value="${mycore}/components" />
  <property name="mycore.schema" value="${mycore}/schema" />
  <property name="mycore.stylesheets" value="${mycore}/xsl" />

  <property name="application" value="${env.DOCPORTAL_HOME}" />
  <property name="application.bin" value="${application}/bin" />
  <property name="application.changelogs" value="${application}/changelogs" />
  <property name="application.config" value="${application}/config" />
  <property name="application.content" value="${application}/content" />
  <property name="application.doc" value="${application}/documentation" />
  <property name="application.dostools" value="${application}/bin/dostools" />
  <property name="application.lib" value="${application}/lib" />
  <property name="application.modules" value="${application}/modules" />
  <property name="application.sources" value="${application}/sources" />
  <property name="application.stylesheets" value="${application}/stylesheets" />
  <property name="application.unixtools" value="${application}/bin/unixtools" />
  <property name="application.webpages" value="${application}/webpages" />

  <property name="build" value="${application}/build" />
  <property name="build.bin" value="${build}/bin" />
  <property name="build.classes" value="${build}/classes" />
  <property name="build.javadocs" value="${build}/javadocs" />
  <property name="build.config" value="${build}/config" />
  <property name="build.lib" value="${build}/lib" />
  <property name="build.modules" value="${build}/modules" />
  <property name="build.schema" value="${build}/schema" />
  <property name="build.sources" value="${build}/sources" />
  <property name="build.stylesheets" value="${build}/stylesheets" />
  <property name="build.webapps" value="${build}/webapps" />

  <property name="data" value="${application}/data" />
  <property name="data.tmp" value="${MCR.oai.resumptiontoken.dir}" />
  <property name="data.save" value="${MCR.Save.FileSystem}" />
  <property name="data.workflow" value="${MCR.editor_base_directory}" />

  <property name="acl-description.all" value="always allowed"/>
  <property name="acl-description.require-login" value="require login"/>
  <property name="acl-description.admins" value="administrators"/>
  <property name="acl-description.editors_admins" value="administrators and editors"/>
  <property name="acl-description.admins_editors_authors" value="administrators, editors and authors"/>
  
  <!-- Read in properties from ${env.MYCORE_HOME}/config/build.properties -->
  <property file="${mycore.config}/build.properties" />

  <path id="mycore.jars">
    <fileset dir="${mycore.lib}" includes="*.jar" />
  </path>
  <property resource="config/mycore.properties" classpathref="mycore.jars"/>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="mycore.jars" />
  <!-- for task is not included in antcontrib.properties by default -->
  <taskdef name="for" classname="net.sf.antcontrib.logic.For" classpathref="mycore.jars" />
  <if>
    <isset property="MCR.System.SharedJarsDir" />
    <then>
      <path id="share.classpath">
        <fileset dir="${MCR.System.SharedJarsDir}" includes="_dummy_ ${MCR.System.Jars}" />
      </path>
    </then>
    <else>
      <if>
        <isset property="MCR.System.Jars" />
        <then>
          <path id="share.classpath">
            <files includes="${MCR.System.Jars}" />
          </path>
        </then>
        <else>
          <path id="share.classpath" />
        </else>
      </if>
    </else>
  </if>

  <!-- old init entries -->
  <path id="application.classpath">
    <!-- add lib path of application componets -->
    <pathelement location="${build.classes}" />
    <pathelement location="${build.config}" />
    <pathelement location="${build.schema}" />
    <pathelement location="${build.stylesheets}" />
    <fileset dir="${build.lib}" includes="*.jar" />
    <fileset dir="${application.lib}" includes="*.jar" />
    <fileset dir="${ant.library.dir}" includes="ant.jar" />
    <!-- add lib path of system componets -->
    <path refid="share.classpath" />
  </path>
  <path id="bootstrap.classpath">
    <path refid="application.classpath" />
    <path refid="mycore.jars" />
  </path>
  <path id="script.classpath">
    <pathelement location="${build.classes}" />
    <pathelement location="${build.config}" />
    <pathelement location="${build.lib}/docportal.jar" />
  </path>

  <path id="application.libpath">
    <dirset dir="${java.home}" includes="bin bin/classic" />
  </path>

  <condition property="detected.os" value="unix">
    <os family="unix" />
  </condition>
  <condition property="detected.os" value="windows">
    <os family="dos" />
  </condition>
  <condition property="os.is.unix">
    <os family="unix" />
  </condition>
  <condition property="os.is.windows">
    <os family="dos" />
  </condition>
  <condition property="os.is.mac">
    <os name="Mac OS X" />
  </condition>

  <condition property="db.is.hibernate">
    <equals arg1="${MCR.JDBCStore.Type}" arg2="hibernate" />
  </condition>
  <condition property="db.is.sql">
    <not>
      <equals arg1="${MCR.JDBCStore.Type}" arg2="hibernate" />
    </not>
  </condition>

  <taskdef classname="org.mycore.common.MCRConfigurationTask" name="mcr-config" classpathref="mycore.jars" />
  <taskdef classname="org.mycore.buildtools.anttasks.MCRIntegrateTask" name="mcr-integrate" classpathref="mycore.jars" />
  <taskdef classname="org.mycore.buildtools.anttasks.MCRGetMyCoReJarTask" classpathref="mycore.jars" name="getMyCoReJar"/>
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="mycore.jars" />

  <!-- =================================================================== -->
  <!-- Search mask generation macro                                        -->
  <!-- =================================================================== -->

  <macrodef name="genSearchMask">

    <attribute name="dir.editor" default="${application.config}" />
    <attribute name="dir.webpage" default="${application.webpages}" />

    <!-- Filename of the editor definition file that defines the search mask form -->
    <attribute name="filename.editor" />

    <!-- Filename of the webpage that contains the search mask -->
    <attribute name="filename.webpage" />

    <!-- i18n key of search mask headline -->
    <attribute name="headline.i18n" />

    <!-- Title of webpage in German -->
    <attribute name="title.de" />

    <!-- Title of webpage in English -->
    <attribute name="title.en" />

    <!-- ID of the search index(es) to include, multiple indexes separated by blanks -->
    <!-- If this property is set, by default all fields in those indexes are included -->
    <attribute name="search.indexes" default="" />

    <!-- Name(s) of the search fields to skip, separated by blanks. -->
    <!-- If this property and search.indexes is set, the listed fields are NOT included in search mask -->
    <attribute name="skip.fields" default="" />

    <!-- Name(s) of the search fields to include, separated by blanks. -->
    <!-- If this property is set, ONLY these search fields will be included in search mask -->
    <attribute name="search.fields" default="" />

    <!-- Optional restriction (hidden condition) for search -->
    <!-- Syntax: "field operator value", separated by blanks -->
    <!-- Example: "objectType = document" -->
    <attribute name="restriction" default="" />

    <!-- List of fields to include as sort criteria of results -->
    <!-- If empty, sort panel is not displayed -->
    <attribute name="sort.fields" default="" />

    <!-- If true, include a panel to select hosts to query -->
    <attribute name="include.hostsSelectionPanel" default="false" />

    <!-- Layout of search mask: simple or advanced -->
    <!-- simple: one line per field, default operator, combine conditions with and -->
    <!-- advanced: choose fields and operators from drop-down list, choose and/or -->
    <attribute name="layout" default="simple" />

    <sequential>
      <echo level="info">Generating search mask from searchfields.xml</echo>
      <unjar src="${mycore.jar}" dest="${application.config}" >
        <patternset>
          <include name="fieldtypes.xml"/>
        </patternset>
      </unjar>
      <xslt basedir="${application}.config}"
            classpathref="application.classpath"
            in="${build.config}/searchfields.xml"
            style="${mycore.stylesheets}/searchfields2searchmask.xsl"
            out="@{dir.editor}/@{filename.editor}"
            force="true">
        <param name="mode" expression="editor" />
        <param name="filename.webpage" expression="@{filename.webpage}" />
        <param name="headline.i18n" expression="@{headline.i18n}" />
        <param name="search.indexes" expression="@{search.indexes}" />
        <param name="search.fields" expression="@{search.fields}" />
        <param name="skip.fields" expression="@{skip.fields}" />
        <param name="restriction" expression="@{restriction}" />
        <param name="sort.fields" expression="@{sort.fields}" />
        <param name="include.hostsSelectionPanel" expression="@{include.hostsSelectionPanel}" />
        <param name="layout" expression="@{layout}" />
      </xslt>
      <echo level="info">Generated editor definition file @{filename.editor}</echo>
      <xslt basedir="${application.config}"
            classpathref="application.classpath"
            in="${build.config}/searchfields.xml"
            style="${mycore.stylesheets}/searchfields2searchmask.xsl"
            out="@{dir.webpage}/@{filename.webpage}"
            force="true">
        <param name="mode" expression="webpage" />
        <param name="filename.editor" expression="@{filename.editor}" />
        <param name="title.de" expression="@{title.de}" />
        <param name="title.en" expression="@{title.en}" />
      </xslt>
      <echo level="info">Generated webpage @{filename.webpage}</echo>
      <delete file="${application.config}/fieldtypes.xml" />
    </sequential>
  </macrodef>
  <!-- END of old init entries-->

  <!-- =================================================================== -->
  <!-- Initalization of directories and CLASSPATH, LIBPATH                 -->
  <!-- =================================================================== -->

  <target name="init">

    <mkdir dir="${build}" />
    <mkdir dir="${build.classes}" />
    <mkdir dir="${build.config}" />
    <mkdir dir="${build.lib}" />
    <mkdir dir="${build.schema}" />
    <mkdir dir="${build.stylesheets}" />

    <pathconvert targetos="${detected.os}" property="script.classpath.translated" refid="script.classpath" />
    <pathconvert targetos="${detected.os}" property="application.classpath.translated" refid="application.classpath" />
    <pathconvert targetos="${detected.os}" property="application.libpath.translated" refid="application.libpath" />

    <property name="env.LIBPATH" value="${application.libpath.translated}" />
    <property name="env.LD_LIBRARY_PATH" value="${application.libpath.translated}" />
    <getMyCoReJar classpathref="mycore.jars" property="mycore.jar"/>
  </target>

  <!-- System CLASSPATH is completely ignored! -->
  <property name="build.sysclasspath" value="ignore" />

  <!-- =================================================================== -->
  <!-- merge the web.xml from core with web.xml of the module              -->
  <!-- =================================================================== -->

  <target name="do.merge" if="web.xml.present">
    <xmltask source="${build.webapps}/WEB-INF/web.xml" dest="${build.webapps}/WEB-INF/web.xml">
      <insert path="/:web-app/:session-config" position="before" file="${web.xml.file}" />
    </xmltask>
    <replace file="${build.webapps}/WEB-INF/web.xml" token='xmlns=""' />
  </target>

  <!-- =================================================================== -->
  <!-- merge module_messages.properties with the message.properties file   -->
  <!-- 						in application/config							   -->
  <!-- =================================================================== -->

  <target name="properties.merge">
    <echo level="info">parameter: ${locale_param} </echo>
    <echo level="info">Source path: ${module}</echo>
    <echo level="info">Dest path: ${build.webapps}/WEB-INF/classes/messages_${locale_param}.properties</echo>
    <echo file="${build.config}/messages_${locale_param}.properties" append="true"><![CDATA[#Source: ${module}
]]></echo>
    <concat destfile="${build.config}/messages_${locale_param}.properties" append="true">
      <fileset file="${module}" />
    </concat>
  </target>

  <target name="model2schema" depends="init">
    <basename file="${metadata.schema}" property="baseSchemaName" suffix=".xml" />
    <condition property="prefixName" value="datamodel-">
      <not>
        <contains string="${baseSchemaName}" substring="datamodel-" />
      </not>
    </condition>
    <condition property="prefixName" value="">
      <contains string="${baseSchemaName}" substring="datamodel-" />
    </condition>
    <echo level="info">Transforming ${metadata.schema}...</echo>
    <xslt basedir="${application.config}"
          classpathref="application.classpath"
          in="${metadata.schema}"
          style="${build.stylesheets}/MCRMetadataSchema.xsl"
          out="${build.schema}/${prefixName}${baseSchemaName}.xsd" />
  </target>

  <!-- =================================================================== -->
  <!-- Invokes the MyCoRe Command Line Interface with a given command      -->
  <!-- =================================================================== -->

  <target name="invoke.cli" depends="init">
    <java classname="org.mycore.frontend.cli.MCRCommandLineInterface"
          dir="${cli.directory}"
          fork="yes"
          maxmemory="${java.maxmemory}"
          classpathref="application.classpath"
          failonerror="true">
      <arg line="${cli.command}" />
      <env key="LIBPATH" value="${env.LIBPATH}" />
      <env key="LD_LIBRARY_PATH" value="${env.LD_LIBRARY_PATH}" />
    </java>
  </target>

  <!-- ================================= 
          target: addObjectType              
         ================================= -->
  <target name="addObjectType">
    <xmltask source="${build.webapps}/WEB-INF/classes/xsl/objecttypes.xsl"
             dest="${build.webapps}/WEB-INF/classes/xsl/objecttypes.xsl">
      <insert path="/*[local-name()='stylesheet']">
        <![CDATA[
	<xsl:include href="${objectType}.xsl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"/>   	  	  	
]]>
   	  	  </insert>
    </xmltask>
    <if>
      <not>
        <available file="${application.modules}/${module}/xsl/${objectType}.xsl" />
      </not>
      <then>
        <echo level="info">Generating ${objectType}.xsl</echo>
        <xmltask dest="${build.webapps}/WEB-INF/classes/xsl/${objectType}.xsl">
          <insert path="/">
            <![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"/>
]]>
		   	  	  </insert>
        </xmltask>
      </then>
    </if>
  </target>
</project>
