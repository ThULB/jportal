<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>fsu.thulb</groupId>
    <artifactId>jportal</artifactId>
    <version>2.0.18-SNAPSHOT</version>
  </parent>
  <artifactId>jportal_web_tests</artifactId>
  <name>JPortal: Integration Tests</name>
  <description>combines all modules and runs integration tests</description>
  <packaging>jar</packaging>
  <properties>
    <MCR.AppName>jportal</MCR.AppName>
    <MCR.Home.Integration>${project.build.directory}/mycore-home</MCR.Home.Integration>
    <selenium.version>2.45.0</selenium.version>
    <solr.version>4.6.1-SNAPSHOT</solr.version>
    <solr.home>${MCR.Home.Integration}/solr-home</solr.home>
    <cargo.jvmargs>
      -DMCR.Home=${MCR.Home.Integration}
      -DMCR.AppName=${MCR.AppName}
      -Dsolr.solr.home=${solr.home}
    </cargo.jvmargs>

    <docportal.dir>${basedir}/docportal</docportal.dir>
    <pom.xml>${docportal.dir}/config/pom.xml</pom.xml>

    <jetty.version>9.1.2.v20140210</jetty.version>
    <tomcat7.version>7.0.53</tomcat7.version>
    <tomcat8.version>8.0.5</tomcat8.version>
    <cargo.version>1.4.7</cargo.version>
    <cargo.servlet.uriencoding>UTF-8</cargo.servlet.uriencoding>
    <cargo.container.zipUrlInstaller.downloadDir>${settings.localRepository}/../cargo/containers</cargo.container.zipUrlInstaller.downloadDir>
    <cargo.deployable.default.groupId>${project.groupId}</cargo.deployable.default.groupId>
    <cargo.deployable.default.artifactId>${project.artifactId}</cargo.deployable.default.artifactId>
    <cargo.deployable.default.context>/</cargo.deployable.default.context>
    <cargo.servlet.port>6291</cargo.servlet.port>
    <cargo.tomcat.ajp.port>6292</cargo.tomcat.ajp.port>
    <site.suffix />
  </properties>

  <profiles>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <script.suffix>bat</script.suffix>
      </properties>
    </profile>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <script.suffix>sh</script.suffix>
      </properties>
    </profile>
    <profile>
      <id>release-profile</id>
      <properties>
        <site.suffix>-${project.version}</site.suffix>
      </properties>
    </profile>
    <profile>
      <id>jetty</id>
      <activation>
        <property>
          <name>jetty</name>
        </property>
      </activation>
      <properties>
        <cargo.container>jetty9x</cargo.container>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>${cargo.container}</containerId>
                  <artifactInstaller>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-distribution</artifactId>
                    <version>${jetty.version}</version>
                  </artifactInstaller>
                </container>
                <configuration>
                  <properties>
                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                  </properties>
                  <xmlReplacements>
                    <xmlReplacement>
                      <file>etc/jetty-logging.xml</file>
                      <xpathExpression>/Configure</xpathExpression>
                      <value>&lt;!-- disabled --&gt;</value>
                    </xmlReplacement>
                  </xmlReplacements>
                </configuration>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>tomcat</id>
      <activation>
        <property>
          <name>tomcat</name>
        </property>
      </activation>
      <properties>
        <cargo.container>tomcat${tomcat}x</cargo.container>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>${cargo.container}</containerId>
                  <zipUrlInstaller>
                    <url>http://ftp.fau.de/apache/tomcat/tomcat-${tomcat}/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.tar.gz</url>
                    <downloadDir>${cargo.container.zipUrlInstaller.downloadDir}</downloadDir>
                  </zipUrlInstaller>
                </container>
                <home>${project.build.directory}/catalina-base</home>
                <configuration>
                  <properties>
                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                    <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                    <cargo.servlet.uriencoding>${cargo.servlet.uriencoding}</cargo.servlet.uriencoding>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>tomcat7</id>
      <activation>
        <property>
          <name>tomcat</name>
          <value>7</value>
        </property>
      </activation>
      <properties>
        <tomcat.version>${tomcat7.version}</tomcat.version>
      </properties>
    </profile>
    <profile>
      <id>tomcat8</id>
      <activation>
        <property>
          <name>tomcat</name>
          <value>8</value>
        </property>
      </activation>
      <properties>
        <tomcat.version>${tomcat8.version}</tomcat.version>
      </properties>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-integration</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>${MCR.Home.Integration}/${MCR.AppName}</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-resources</phase>
            <configuration>
              <target>
                <echo>==================================================</echo>
                <echo>Install docportal...</echo>
                <echo>==================================================</echo>
                <path id="init.classpath">
                  <fileset dir="lib" includes="*.jar" />
                </path>
                <copy file="${pom.xml}.template" tofile="${pom.xml}" overwrite="true" />
                <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="init.classpath" />
                <xmltask source="${pom.xml}" dest="${pom.xml}">
                  <insert path="/:project/:dependencies" position="under">
                  <![CDATA[ 
                    <dependency>
                      <groupId>fsu.thulb</groupId>
                      <artifactId>jportal_mcr_module</artifactId>
                      <version>${project.version}</version>
                    </dependency>
                    <dependency>
                      <groupId>fsu.thulb</groupId>
                      <artifactId>jportal_sample_data</artifactId>
                      <version>${project.version}</version>
                    </dependency>
                    ]]>
                  </insert>
                </xmltask>
                <replace file="${pom.xml}" token='xmlns=""' />
                <copy file="${docportal.dir}/config/mycore.private.properties.template" tofile="${docportal.dir}/config/mycore.private.properties"
                  overwrite="true" />

                <echo>==================================================</echo>
                <echo>Configuring mycore.private.properties...</echo>
                <echo>==================================================</echo>

                <replaceregexp file="${docportal.dir}/config/mycore.private.properties" match="MCR.basedir=(.*)" replace="MCR.basedir=${docportal.dir}"
                  byline="true" />
                <replaceregexp file="${docportal.dir}/config/mycore.private.properties" match="MCR.NameOfProject=(.*)" replace="MCR.NameOfProject=JPortal"
                  byline="true" />
                <replaceregexp file="${docportal.dir}/config/mycore.private.properties" match="MCR.Modules.Application=(.*)" replace="MCR.Modules.Application=common,legacy-search,maven"
                  byline="true" />
                <replace file="${docportal.dir}/config/mycore.private.properties" token="migration20-21,imaging,iview" value="migration20-21,iview,imaging,swf,z3950,zoomify" />

                <replace file="${docportal.dir}/config/mycore.private.properties" token="8291" value="${cargo.servlet.port}" />

                <concat append="true" destfile="${docportal.dir}/config/mycore.private.properties">
                  # file appender for logging jetty during tests with ant
                  log4j.appender.fileAppender=org.apache.log4j.FileAppender
                  log4j.appender.fileAppender.File=${docportal.dir}/build/logfile.txt
                  log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
                  log4j.appender.fileAppender.layout.ConversionPattern=%d %-5p (%F:%L) - %m%n
                  MCR.Module-solr.ServerURL=http\://localhost\:${cargo.servlet.port}/solr/jportal
                  JP.Sampledata.loadOnStartup=true
                  MCR.Startup.Class=%MCR.Startup.Class%,fsu.jportal.sampledata.Setup
                </concat>

                <echo>==================================================</echo>
                <echo>Configuring jetty-pom.xml...                      </echo>
                <echo>==================================================</echo>
                <replace file="${docportal.dir}/config/jetty-pom.xml" token="8291" value="${cargo.servlet.port}" />
                <replace file="${docportal.dir}/config/jetty-pom.xml" token="8293" value="6293" />

                <echo>=============================================================</echo>
                <echo>Resolving libraries, schema, jar and scripts... Create WAR...</echo>
                <echo>=============================================================</echo>
                <!-- ANT Task not working - use exec instead -->
                <exec dir="${docportal.dir}" executable="ant">
                  <arg value="resolve" />
                  <arg value="clean.data" />
                  <arg value="create.schema" />
                  <arg value="create.jar" />
                  <arg value="create.war" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-cli</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>jportal_setup</artifactId>
                  <version>${project.version}</version>
                  <type>tar.gz</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-solr</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.mycore.solr</groupId>
                  <artifactId>solr</artifactId>
                  <version>${solr.version}</version>
                  <type>war</type>
                  <destFileName>solr.war</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/war</outputDirectory>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
          <execution>
            <id>copy-test-libs</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${MCR.Home.Integration}/${MCR.AppName}/libs</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>com.h2database</groupId>
                  <artifactId>h2</artifactId>
                  <version>1.4.177</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-docportal</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/war</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/docportal/build</directory>
                  <includes>
                    <include>docportal.war</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-test-config</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${MCR.Home.Integration}/${MCR.AppName}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/integration</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-solr-config</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${solr.home}</outputDirectory>
              <resources>
                <resource>
                  <directory>docportal/config/solr-home</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-sample-data</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${MCR.Home.Integration}/${MCR.AppName}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>jportal-setup</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.build.directory}/dependency/jportal_setup-${project.version}</workingDirectory>
              <executable>bin/setup.${script.suffix}</executable>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <environmentVariables>
            <JAVA_OPTS>-DMCR.Home=${MCR.Home.Integration}</JAVA_OPTS>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>${cargo.version}</version>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <deployables>
                <deployable>
                  <groupId>org.mycore.solr</groupId>
                  <artifactId>solr</artifactId>
                  <type>war</type>
                  <properties>
                    <context>/solr</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.build.directory}/war/docportal.war</location>
                  <type>war</type>
                  <properties>
                    <context>/${MCR.AppName}</context>
                  </properties>
                </deployable>
              </deployables>
              <configuration>
                <properties>
                  <cargo.jvmargs>${cargo.jvmargs}</cargo.jvmargs>
                </properties>
              </configuration>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/failsafe-reports/${cargo.container}</reportsDirectory>
          <systemPropertyVariables>
            <project.build.directory>${project.build.directory}</project.build.directory>
            <it.port>${cargo.servlet.port}</it.port>
            <it.context>${MCR.AppName}</it.context>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify-results</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>jportal_mcr_module</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-base</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-user2</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>jportal_sample_data</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mycore.solr</groupId>
      <artifactId>solr</artifactId>
      <version>${solr.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-support</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-firefox-driver</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-api</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
<!--     <dependency> -->
<!--       <groupId>log4j</groupId> -->
<!--       <artifactId>log4j</artifactId> -->
<!--     </dependency> -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-viewer</artifactId>
      <version>0.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>