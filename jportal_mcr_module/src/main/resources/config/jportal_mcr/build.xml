<?xml version="1.0" encoding="UTF-8"?>
<project name="jportal_mcr" xmlns:mcr="antlib:org.mycore.buildtools">
	<import file="${basedir}/common-modules.xml" />
	<import file="${basedir}/build.xml" />

	<property name="module.directory" location="${ant.file}/.." />
	<property file="${module.directory}/build.properties" />
	<property file="${build}/build.properties" />

	<property name="module.jar" location="${build.lib}/${module.jar.name}" />

	<target name="create.default-rules" description="loads default acl rules for jportal application">
		<echo>Default rules</echo>
		<antcall target="invoke.cli">
			<param name="cli.directory" value="${module.directory}/acl" />
			<param name="cli.command" value="process defaultrules-commands" />
		</antcall>
	</target>

	<target name="create.users">
		<echo>Create users and groups</echo>
		<antcall target="invoke.cli">
			<param name="cli.directory" value="${module.directory}/usersAndGroups" />
			<param name="cli.command" value="process usersAndGroups-commands" />
		</antcall>
	</target>

	<target name="config">
		

		<!-- copy solr jportal -->
		<echo>copy solr stuff</echo>
	    <copy todir="${basedir}/config/solr-home">
	      <fileset dir="${basedir}/config/solr-home.template">
	        <exclude name="solr.xml" />
	        <exclude name="conf/schema.xml" />
	        <exclude name="conf/solrconfig.xml" />
	      </fileset>
	    </copy>
		<copy todir="${basedir}/config/solr-home">
			<fileset dir="${module.directory}/solr" />
		</copy>
		<!-- copy solr classification -->
	    <echo>copy solr classification schema: ${build.lib}/${mycore.jar}</echo>
		<unjar dest="${basedir}/config/solr-home/conf" overwrite="true">
			<fileset file="${mycore.jar}" />
			<patternset>
				<include name="components/solr/config/solr/conf/classificationSchema.xml" />
			</patternset>
			<regexpmapper from="^(components/solr/config/solr/conf/)(classificationSchema.xml)" to="\2" />
		</unjar>
	</target>

	<!-- CREATE WEB APPLICATION -->
	<target name="create.webapp">
		<echo>JPortal webapp</echo>

		<!-- extract templates until we find a better approach -->
		<unjar dest="${build.webapps}" overwrite="true">
			<fileset file="${module.jar}" />
			<patternset>
				<include name="META-INF/resources/jp_templates/**" />
			</patternset>
			<regexpmapper from="^(META-INF/resources/)(jp_templates/.*)" to="\2" />
		</unjar>
		<!-- overwrite index.xml -->
		<unjar dest="${build.webapps}" overwrite="true">
			<fileset file="${module.jar}" />
			<patternset>
				<include name="META-INF/resources/content/below/index.xml" />
			</patternset>
			<regexpmapper from="^(META-INF/resources/)(.*)" to="\2" />
		</unjar>
		<!-- overwrite generatePage.xsl -->
		<unjar dest="${build.webapps}/WEB-INF/classes" overwrite="true">
			<fileset file="${module.jar}" />
			<patternset>
				<include name="xsl/generatePage.xsl" />
			</patternset>
		</unjar>
		<!-- overwrite sitemap.xsl -->
		<unjar dest="${build.webapps}/WEB-INF/classes" overwrite="true">
			<fileset file="${module.jar}" />
			<patternset>
				<include name="xsl/sitemap.xsl" />
			</patternset>
		</unjar>
		<!-- overwrite mycoreobject-solr.xsl -->
		<unjar dest="${build.webapps}/WEB-INF/classes" overwrite="true">
			<fileset file="${module.jar}" />
			<patternset>
				<include name="xsl/mycoreobject-solr.xsl" />
			</patternset>
		</unjar>

	</target>

</project>
