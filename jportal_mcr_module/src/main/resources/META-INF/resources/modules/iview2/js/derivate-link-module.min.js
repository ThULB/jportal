var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var mycore;
(function (mycore) {
    (function (viewer) {
        (function (components) {
            var DerivateLinkComponent = (function (_super) {
                __extends(DerivateLinkComponent, _super);
                function DerivateLinkComponent(_settings) {
                    _super.call(this);
                    this._settings = _settings;
                }
                DerivateLinkComponent.prototype.handle = function (e) {
                    if (e.type == mycore.viewer.components.events.ProvideToolbarModelEvent.TYPE) {
                        this._toolbarModel = e.model;
                        this._derivateLinkControllGroup = new mycore.viewer.widgets.toolbar.ToolbarGroup("DerivateLinkControllGroup");
                        this._toolbarModel.addGroup(this._derivateLinkControllGroup);
                        this._derivateLinkButton = new mycore.viewer.widgets.toolbar.ToolbarButton("DerivateLinkButton", "", "paperclip", "paperclip");
                        this._derivateLinkControllGroup.addComponent(this._derivateLinkButton);
                    }

                    if (this._derivateLinkButton != null) {
                        if (e.type == mycore.viewer.components.events.LanguageModelLoadedEvent.TYPE) {
                            var languageModelLoadedEvent = e;
                            this.i18n(languageModelLoadedEvent.languageModel);
                        }
                    }

                    if (e.type == mycore.viewer.widgets.toolbar.events.ButtonPressedEvent.TYPE) {
                        var buttonPressedEvent = e;
                        if (buttonPressedEvent.button.id == "DerivateLinkButton") {
                            this._linkImage();
                        }
                    }

                    if (e.type == mycore.viewer.components.events.ImageChangedEvent.TYPE) {
                        this._currentImage = e.image.href;
                    }
                };

                DerivateLinkComponent.prototype.i18n = function (model) {
                    this._derivateLinkButton.tooltip = model.getTranslation("toolbar.derivateLink");
                };

                Object.defineProperty(DerivateLinkComponent.prototype, "handlesEvents", {
                    get: function () {
                        var handleEvents = new Array();
                        handleEvents.push(mycore.viewer.components.events.ProvideToolbarModelEvent.TYPE);
                        handleEvents.push(mycore.viewer.components.events.LanguageModelLoadedEvent.TYPE);
                        handleEvents.push(mycore.viewer.widgets.toolbar.events.ButtonPressedEvent.TYPE);
                        handleEvents.push(mycore.viewer.components.events.ImageChangedEvent.TYPE);
                        return handleEvents;
                    },
                    enumerable: true,
                    configurable: true
                });

                DerivateLinkComponent.prototype.init = function () {
                    this._currentImage = this._settings.filePath;
                    this.trigger(new mycore.viewer.components.events.WaitForEvent(this, mycore.viewer.components.events.ProvideToolbarModelEvent.TYPE));
                    this.trigger(new mycore.viewer.components.events.WaitForEvent(this, mycore.viewer.components.events.LanguageModelLoadedEvent.TYPE));
                };

                DerivateLinkComponent.prototype._linkImage = function () {
                    this._derivateLinkButton.active = true;
                    var servletPath = this._settings.webApplicationBaseURL + "/rsc/derivate/link/bookmark/" + this._settings.derivate + "?image=" + encodeURIComponent(this._currentImage);
                    jQuery.post(servletPath).fail(function (error) {
                        alert(error.responseText);
                    });
                };
                return DerivateLinkComponent;
            })(mycore.viewer.components.ViewerComponent);
            components.DerivateLinkComponent = DerivateLinkComponent;
        })(viewer.components || (viewer.components = {}));
        var components = viewer.components;
    })(mycore.viewer || (mycore.viewer = {}));
    var viewer = mycore.viewer;
})(mycore || (mycore = {}));

addIviewComponent(mycore.viewer.components.DerivateLinkComponent);
console.log("DERIVATE LINK MODULE");
//# sourceMappingURL=derivate-link-module.js.map
